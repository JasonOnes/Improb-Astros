# Generated by Django 2.0.3 on 2018-04-27 17:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('movies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField(blank=True, default='')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('last_reviewed', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=25)),
                ('following', models.ManyToManyField(to='movies.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='movie',
            name='added',
        ),
        migrations.RemoveField(
            model_name='movie',
            name='rating',
        ),
        migrations.RemoveField(
            model_name='movie',
            name='seen_on',
        ),
        migrations.AddField(
            model_name='movie',
            name='imdb_score',
            field=models.PositiveSmallIntegerField(default=0, null=True),
        ),
        migrations.AddField(
            model_name='movie',
            name='imdb_url',
            field=models.URLField(null=True),
        ),
        migrations.AddField(
            model_name='movie',
            name='length',
            field=models.PositiveSmallIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='movie',
            name='num_of_reviewers',
            field=models.PositiveIntegerField(null=True),
        ),
        migrations.AddField(
            model_name='movie',
            name='rated',
            field=models.CharField(max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='movie',
            name='rot_toms_score',
            field=models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='movie',
            name='user_ratings_average',
            field=models.PositiveSmallIntegerField(null=True),
        ),
        migrations.AlterField(
            model_name='movie',
            name='title',
            field=models.CharField(max_length=500),
        ),
        migrations.AddField(
            model_name='review',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.Movie'),
        ),
        migrations.AddField(
            model_name='review',
            name='reviewer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='movies.User'),
        ),
        migrations.AddField(
            model_name='moviegenre',
            name='movie_with_genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.Movie'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='movies.MovieGenre'),
        ),
    ]
